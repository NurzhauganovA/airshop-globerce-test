"""create notification tables

Revision ID: 5e59580e9b40
Revises: 4fa02ff8eee0
Create Date: 2025-09-10 17:22:33.551391

"""

from typing import Sequence, Union

from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5e59580e9b40"
down_revision: Union[str, Sequence[str], None] = "4fa02ff8eee0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "notification",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "notification",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    op.alter_column(
        "template", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "template", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "template", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "template", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "notification",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "notification",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    # ### end Alembic commands ###
