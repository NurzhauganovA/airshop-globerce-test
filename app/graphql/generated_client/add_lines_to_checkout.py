# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AddressTypeEnum, CheckoutErrorCode


class AddLinesToCheckout(BaseModel):
    checkout_lines_add: Optional["AddLinesToCheckoutCheckoutLinesAdd"] = Field(
        alias="checkoutLinesAdd"
    )


class AddLinesToCheckoutCheckoutLinesAdd(BaseModel):
    errors: List["AddLinesToCheckoutCheckoutLinesAddErrors"]
    checkout_errors: List["AddLinesToCheckoutCheckoutLinesAddCheckoutErrors"] = Field(
        alias="checkoutErrors"
    )


class AddLinesToCheckoutCheckoutLinesAddErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: CheckoutErrorCode
    variants: Optional[List[str]]
    lines: Optional[List[str]]
    address_type: Optional[AddressTypeEnum] = Field(alias="addressType")


class AddLinesToCheckoutCheckoutLinesAddCheckoutErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: CheckoutErrorCode
    variants: Optional[List[str]]
    lines: Optional[List[str]]
    address_type: Optional[AddressTypeEnum] = Field(alias="addressType")


AddLinesToCheckout.model_rebuild()
AddLinesToCheckoutCheckoutLinesAdd.model_rebuild()
