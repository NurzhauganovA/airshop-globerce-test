# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import AddressTypeEnum, CheckoutErrorCode


class CreateCheckoutFromAirlink(BaseModel):
    checkout_create: Optional["CreateCheckoutFromAirlinkCheckoutCreate"] = Field(
        alias="checkoutCreate"
    )


class CreateCheckoutFromAirlinkCheckoutCreate(BaseModel):
    created: Optional[bool]
    checkout_errors: List["CreateCheckoutFromAirlinkCheckoutCreateCheckoutErrors"] = (
        Field(alias="checkoutErrors")
    )
    checkout: Optional["CreateCheckoutFromAirlinkCheckoutCreateCheckout"]
    errors: List["CreateCheckoutFromAirlinkCheckoutCreateErrors"]


class CreateCheckoutFromAirlinkCheckoutCreateCheckoutErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: CheckoutErrorCode
    variants: Optional[List[str]]
    lines: Optional[List[str]]
    address_type: Optional[AddressTypeEnum] = Field(alias="addressType")


class CreateCheckoutFromAirlinkCheckoutCreateCheckout(BaseModel):
    id: str


class CreateCheckoutFromAirlinkCheckoutCreateErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: CheckoutErrorCode
    variants: Optional[List[str]]
    lines: Optional[List[str]]
    address_type: Optional[AddressTypeEnum] = Field(alias="addressType")


CreateCheckoutFromAirlink.model_rebuild()
CreateCheckoutFromAirlinkCheckoutCreate.model_rebuild()
