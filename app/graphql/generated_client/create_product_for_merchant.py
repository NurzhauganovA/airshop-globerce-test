# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ProductErrorCode


class CreateProductForMerchant(BaseModel):
    product_create: Optional["CreateProductForMerchantProductCreate"] = Field(
        alias="productCreate"
    )


class CreateProductForMerchantProductCreate(BaseModel):
    product_errors: List["CreateProductForMerchantProductCreateProductErrors"] = Field(
        alias="productErrors"
    )
    errors: List["CreateProductForMerchantProductCreateErrors"]
    product: Optional["CreateProductForMerchantProductCreateProduct"]


class CreateProductForMerchantProductCreateProductErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ProductErrorCode
    attributes: Optional[List[str]]
    values: Optional[List[str]]


class CreateProductForMerchantProductCreateErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ProductErrorCode
    attributes: Optional[List[str]]
    values: Optional[List[str]]


class CreateProductForMerchantProductCreateProduct(BaseModel):
    id: str
    name: str
    slug: str
    metadata: List["CreateProductForMerchantProductCreateProductMetadata"]


class CreateProductForMerchantProductCreateProductMetadata(BaseModel):
    value: str
    key: str


CreateProductForMerchant.model_rebuild()
CreateProductForMerchantProductCreate.model_rebuild()
CreateProductForMerchantProductCreateProduct.model_rebuild()
