# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ShippingErrorCode, ShippingMethodTypeEnum


class CreateShippingPrice(BaseModel):
    shipping_price_create: Optional["CreateShippingPriceShippingPriceCreate"] = Field(
        alias="shippingPriceCreate"
    )


class CreateShippingPriceShippingPriceCreate(BaseModel):
    shipping_errors: List["CreateShippingPriceShippingPriceCreateShippingErrors"] = (
        Field(alias="shippingErrors")
    )
    errors: List["CreateShippingPriceShippingPriceCreateErrors"]
    shipping_method: Optional[
        "CreateShippingPriceShippingPriceCreateShippingMethod"
    ] = Field(alias="shippingMethod")


class CreateShippingPriceShippingPriceCreateShippingErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ShippingErrorCode
    warehouses: Optional[List[str]]
    channels: Optional[List[str]]


class CreateShippingPriceShippingPriceCreateErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ShippingErrorCode
    warehouses: Optional[List[str]]
    channels: Optional[List[str]]


class CreateShippingPriceShippingPriceCreateShippingMethod(BaseModel):
    id: str
    name: str
    description: Optional[Any]
    type: Optional[ShippingMethodTypeEnum]
    maximum_delivery_days: Optional[int] = Field(alias="maximumDeliveryDays")
    minimum_delivery_days: Optional[int] = Field(alias="minimumDeliveryDays")


CreateShippingPrice.model_rebuild()
CreateShippingPriceShippingPriceCreate.model_rebuild()
