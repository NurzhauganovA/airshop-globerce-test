# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ShippingErrorCode


class CreateShippingZoneForMerchant(BaseModel):
    shipping_zone_create: Optional[
        "CreateShippingZoneForMerchantShippingZoneCreate"
    ] = Field(alias="shippingZoneCreate")


class CreateShippingZoneForMerchantShippingZoneCreate(BaseModel):
    errors: List["CreateShippingZoneForMerchantShippingZoneCreateErrors"]
    shipping_errors: List[
        "CreateShippingZoneForMerchantShippingZoneCreateShippingErrors"
    ] = Field(alias="shippingErrors")
    shipping_zone: Optional[
        "CreateShippingZoneForMerchantShippingZoneCreateShippingZone"
    ] = Field(alias="shippingZone")


class CreateShippingZoneForMerchantShippingZoneCreateErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ShippingErrorCode
    warehouses: Optional[List[str]]
    channels: Optional[List[str]]


class CreateShippingZoneForMerchantShippingZoneCreateShippingErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ShippingErrorCode
    warehouses: Optional[List[str]]
    channels: Optional[List[str]]


class CreateShippingZoneForMerchantShippingZoneCreateShippingZone(BaseModel):
    id: str
    private_metafields: Optional[Any] = Field(alias="privateMetafields")
    metafields: Optional[Any]
    name: str
    default: bool
    description: Optional[str]


CreateShippingZoneForMerchant.model_rebuild()
CreateShippingZoneForMerchantShippingZoneCreate.model_rebuild()
