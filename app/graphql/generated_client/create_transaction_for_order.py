# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import TransactionActionEnum, TransactionCreateErrorCode


class CreateTransactionForOrder(BaseModel):
    transaction_create: Optional["CreateTransactionForOrderTransactionCreate"] = Field(
        alias="transactionCreate"
    )


class CreateTransactionForOrderTransactionCreate(BaseModel):
    errors: List["CreateTransactionForOrderTransactionCreateErrors"]
    transaction: Optional["CreateTransactionForOrderTransactionCreateTransaction"]


class CreateTransactionForOrderTransactionCreateErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: TransactionCreateErrorCode


class CreateTransactionForOrderTransactionCreateTransaction(BaseModel):
    id: str
    private_metafields: Optional[Any] = Field(alias="privateMetafields")
    metafields: Optional[Any]
    token: Any
    created_at: Any = Field(alias="createdAt")
    modified_at: Any = Field(alias="modifiedAt")
    actions: List[TransactionActionEnum]
    name: str
    message: str


CreateTransactionForOrder.model_rebuild()
CreateTransactionForOrderTransactionCreate.model_rebuild()
