# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ProductErrorCode


class CreateVariantForProduct(BaseModel):
    product_variant_create: Optional["CreateVariantForProductProductVariantCreate"] = (
        Field(alias="productVariantCreate")
    )


class CreateVariantForProductProductVariantCreate(BaseModel):
    product_errors: List["CreateVariantForProductProductVariantCreateProductErrors"] = (
        Field(alias="productErrors")
    )
    errors: List["CreateVariantForProductProductVariantCreateErrors"]
    product_variant: Optional[
        "CreateVariantForProductProductVariantCreateProductVariant"
    ] = Field(alias="productVariant")


class CreateVariantForProductProductVariantCreateProductErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ProductErrorCode
    attributes: Optional[List[str]]
    values: Optional[List[str]]


class CreateVariantForProductProductVariantCreateErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ProductErrorCode
    attributes: Optional[List[str]]
    values: Optional[List[str]]


class CreateVariantForProductProductVariantCreateProductVariant(BaseModel):
    id: str
    name: str
    sku: Optional[str]
    track_inventory: bool = Field(alias="trackInventory")
    quantity_limit_per_customer: Optional[int] = Field(alias="quantityLimitPerCustomer")
    channel: Optional[str]
    margin: Optional[int]
    quantity_ordered: Optional[int] = Field(alias="quantityOrdered")
    quantity_available: Optional[int] = Field(alias="quantityAvailable")
    created: Any
    updated_at: Any = Field(alias="updatedAt")
    external_reference: Optional[str] = Field(alias="externalReference")


CreateVariantForProduct.model_rebuild()
CreateVariantForProductProductVariantCreate.model_rebuild()
