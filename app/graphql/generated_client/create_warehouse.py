# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import WarehouseClickAndCollectOptionEnum, WarehouseErrorCode


class CreateWarehouse(BaseModel):
    create_warehouse: Optional["CreateWarehouseCreateWarehouse"] = Field(
        alias="createWarehouse"
    )


class CreateWarehouseCreateWarehouse(BaseModel):
    errors: List["CreateWarehouseCreateWarehouseErrors"]
    warehouse_errors: List["CreateWarehouseCreateWarehouseWarehouseErrors"] = Field(
        alias="warehouseErrors"
    )
    warehouse: Optional["CreateWarehouseCreateWarehouseWarehouse"]


class CreateWarehouseCreateWarehouseErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: WarehouseErrorCode
    shipping_zones: Optional[List[str]] = Field(alias="shippingZones")


class CreateWarehouseCreateWarehouseWarehouseErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: WarehouseErrorCode
    shipping_zones: Optional[List[str]] = Field(alias="shippingZones")


class CreateWarehouseCreateWarehouseWarehouse(BaseModel):
    id: str
    name: str
    slug: str
    email: str
    is_private: bool = Field(alias="isPrivate")
    company_name: str = Field(alias="companyName")
    click_and_collect_option: WarehouseClickAndCollectOptionEnum = Field(
        alias="clickAndCollectOption"
    )
    external_reference: Optional[str] = Field(alias="externalReference")


CreateWarehouse.model_rebuild()
CreateWarehouseCreateWarehouse.model_rebuild()
