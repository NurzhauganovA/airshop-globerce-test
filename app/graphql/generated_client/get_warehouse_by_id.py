# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import Any, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import WarehouseClickAndCollectOptionEnum


class GetWarehouseByID(BaseModel):
    warehouse: Optional["GetWarehouseByIDWarehouse"]


class GetWarehouseByIDWarehouse(BaseModel):
    id: str
    private_metafields: Optional[Any] = Field(alias="privateMetafields")
    metafields: Optional[Any]
    name: str
    slug: str
    email: str
    is_private: bool = Field(alias="isPrivate")
    company_name: str = Field(alias="companyName")
    click_and_collect_option: WarehouseClickAndCollectOptionEnum = Field(
        alias="clickAndCollectOption"
    )
    external_reference: Optional[str] = Field(alias="externalReference")
    address: "GetWarehouseByIDWarehouseAddress"


class GetWarehouseByIDWarehouseAddress(BaseModel):
    id: str
    metafields: Optional[Any]
    first_name: str = Field(alias="firstName")
    last_name: str = Field(alias="lastName")
    company_name: str = Field(alias="companyName")
    street_address_1: str = Field(alias="streetAddress1")
    street_address_2: str = Field(alias="streetAddress2")
    city: str
    city_area: str = Field(alias="cityArea")
    postal_code: str = Field(alias="postalCode")
    country_area: str = Field(alias="countryArea")
    phone: Optional[str]
    is_default_shipping_address: Optional[bool] = Field(
        alias="isDefaultShippingAddress"
    )
    is_default_billing_address: Optional[bool] = Field(alias="isDefaultBillingAddress")


GetWarehouseByID.model_rebuild()
GetWarehouseByIDWarehouse.model_rebuild()
