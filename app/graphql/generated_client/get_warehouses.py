# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import WarehouseClickAndCollectOptionEnum


class GetWarehouses(BaseModel):
    warehouses: Optional["GetWarehousesWarehouses"]


class GetWarehousesWarehouses(BaseModel):
    total_count: Optional[int] = Field(alias="totalCount")
    page_info: "GetWarehousesWarehousesPageInfo" = Field(alias="pageInfo")
    edges: List["GetWarehousesWarehousesEdges"]


class GetWarehousesWarehousesPageInfo(BaseModel):
    has_next_page: bool = Field(alias="hasNextPage")
    has_previous_page: bool = Field(alias="hasPreviousPage")
    start_cursor: Optional[str] = Field(alias="startCursor")
    end_cursor: Optional[str] = Field(alias="endCursor")


class GetWarehousesWarehousesEdges(BaseModel):
    cursor: str
    node: "GetWarehousesWarehousesEdgesNode"


class GetWarehousesWarehousesEdgesNode(BaseModel):
    id: str
    private_metafields: Optional[Any] = Field(alias="privateMetafields")
    metafields: Optional[Any]
    name: str
    slug: str
    email: str
    is_private: bool = Field(alias="isPrivate")
    company_name: str = Field(alias="companyName")
    click_and_collect_option: WarehouseClickAndCollectOptionEnum = Field(
        alias="clickAndCollectOption"
    )
    external_reference: Optional[str] = Field(alias="externalReference")


GetWarehouses.model_rebuild()
GetWarehousesWarehouses.model_rebuild()
GetWarehousesWarehousesEdges.model_rebuild()
