# Generated by ariadne-codegen on 2025-08-25 15:23
# Source: app/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class ListProducts(BaseModel):
    products: Optional["ListProductsProducts"]


class ListProductsProducts(BaseModel):
    edges: List["ListProductsProductsEdges"]
    page_info: "ListProductsProductsPageInfo" = Field(alias="pageInfo")


class ListProductsProductsEdges(BaseModel):
    node: "ListProductsProductsEdgesNode"


class ListProductsProductsEdgesNode(BaseModel):
    id: str
    name: str
    slug: str
    description: Optional[Any]
    variants: Optional[List["ListProductsProductsEdgesNodeVariants"]]


class ListProductsProductsEdgesNodeVariants(BaseModel):
    id: str
    name: str
    sku: Optional[str]
    pricing: Optional["ListProductsProductsEdgesNodeVariantsPricing"]
    stocks: Optional[List["ListProductsProductsEdgesNodeVariantsStocks"]]


class ListProductsProductsEdgesNodeVariantsPricing(BaseModel):
    price: Optional["ListProductsProductsEdgesNodeVariantsPricingPrice"]


class ListProductsProductsEdgesNodeVariantsPricingPrice(BaseModel):
    gross: "ListProductsProductsEdgesNodeVariantsPricingPriceGross"


class ListProductsProductsEdgesNodeVariantsPricingPriceGross(BaseModel):
    amount: float
    currency: str


class ListProductsProductsEdgesNodeVariantsStocks(BaseModel):
    quantity: int


class ListProductsProductsPageInfo(BaseModel):
    end_cursor: Optional[str] = Field(alias="endCursor")
    has_next_page: bool = Field(alias="hasNextPage")


ListProducts.model_rebuild()
ListProductsProducts.model_rebuild()
ListProductsProductsEdges.model_rebuild()
ListProductsProductsEdgesNode.model_rebuild()
ListProductsProductsEdgesNodeVariants.model_rebuild()
ListProductsProductsEdgesNodeVariantsPricing.model_rebuild()
ListProductsProductsEdgesNodeVariantsPricingPrice.model_rebuild()
