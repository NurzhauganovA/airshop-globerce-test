# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AddressTypeEnum,
    CheckoutAuthorizeStatusEnum,
    CheckoutChargeStatusEnum,
    CheckoutErrorCode,
    LanguageCodeEnum,
)


class UpdateCheckoutEmail(BaseModel):
    checkout_email_update: Optional["UpdateCheckoutEmailCheckoutEmailUpdate"] = Field(
        alias="checkoutEmailUpdate"
    )


class UpdateCheckoutEmailCheckoutEmailUpdate(BaseModel):
    checkout_errors: List["UpdateCheckoutEmailCheckoutEmailUpdateCheckoutErrors"] = (
        Field(alias="checkoutErrors")
    )
    errors: List["UpdateCheckoutEmailCheckoutEmailUpdateErrors"]
    checkout: Optional["UpdateCheckoutEmailCheckoutEmailUpdateCheckout"]


class UpdateCheckoutEmailCheckoutEmailUpdateCheckoutErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: CheckoutErrorCode
    variants: Optional[List[str]]
    lines: Optional[List[str]]
    address_type: Optional[AddressTypeEnum] = Field(alias="addressType")


class UpdateCheckoutEmailCheckoutEmailUpdateErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: CheckoutErrorCode
    variants: Optional[List[str]]
    lines: Optional[List[str]]
    address_type: Optional[AddressTypeEnum] = Field(alias="addressType")


class UpdateCheckoutEmailCheckoutEmailUpdateCheckout(BaseModel):
    id: str
    created: Any
    updated_at: Any = Field(alias="updatedAt")
    last_change: Any = Field(alias="lastChange")
    customer_note: str = Field(alias="customerNote")
    note: str
    discount_name: Optional[str] = Field(alias="discountName")
    translated_discount_name: Optional[str] = Field(alias="translatedDiscountName")
    voucher_code: Optional[str] = Field(alias="voucherCode")
    email: Optional[str]
    is_shipping_required: bool = Field(alias="isShippingRequired")
    quantity: int
    stock_reservation_expires: Optional[Any] = Field(alias="stockReservationExpires")
    tax_exemption: bool = Field(alias="taxExemption")
    token: Any
    language_code: LanguageCodeEnum = Field(alias="languageCode")
    display_gross_prices: bool = Field(alias="displayGrossPrices")
    authorize_status: CheckoutAuthorizeStatusEnum = Field(alias="authorizeStatus")
    charge_status: CheckoutChargeStatusEnum = Field(alias="chargeStatus")


UpdateCheckoutEmail.model_rebuild()
UpdateCheckoutEmailCheckoutEmailUpdate.model_rebuild()
