# Generated by ariadne-codegen on 2025-09-18 16:35
# Source: app/graphql/queries

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import ProductErrorCode


class VariantSetPrice(BaseModel):
    product_variant_channel_listing_update: Optional[
        "VariantSetPriceProductVariantChannelListingUpdate"
    ] = Field(alias="productVariantChannelListingUpdate")


class VariantSetPriceProductVariantChannelListingUpdate(BaseModel):
    product_channel_listing_errors: List[
        "VariantSetPriceProductVariantChannelListingUpdateProductChannelListingErrors"
    ] = Field(alias="productChannelListingErrors")
    errors: List["VariantSetPriceProductVariantChannelListingUpdateErrors"]
    variant: Optional["VariantSetPriceProductVariantChannelListingUpdateVariant"]


class VariantSetPriceProductVariantChannelListingUpdateProductChannelListingErrors(
    BaseModel
):
    field: Optional[str]
    message: Optional[str]
    code: ProductErrorCode
    attributes: Optional[List[str]]
    values: Optional[List[str]]
    channels: Optional[List[str]]
    variants: Optional[List[str]]


class VariantSetPriceProductVariantChannelListingUpdateErrors(BaseModel):
    field: Optional[str]
    message: Optional[str]
    code: ProductErrorCode
    attributes: Optional[List[str]]
    values: Optional[List[str]]
    channels: Optional[List[str]]
    variants: Optional[List[str]]


class VariantSetPriceProductVariantChannelListingUpdateVariant(BaseModel):
    id: str
    name: str
    sku: Optional[str]
    track_inventory: bool = Field(alias="trackInventory")
    quantity_limit_per_customer: Optional[int] = Field(alias="quantityLimitPerCustomer")
    channel: Optional[str]
    margin: Optional[int]
    quantity_ordered: Optional[int] = Field(alias="quantityOrdered")
    quantity_available: Optional[int] = Field(alias="quantityAvailable")
    created: Any
    updated_at: Any = Field(alias="updatedAt")
    external_reference: Optional[str] = Field(alias="externalReference")


VariantSetPrice.model_rebuild()
VariantSetPriceProductVariantChannelListingUpdate.model_rebuild()
