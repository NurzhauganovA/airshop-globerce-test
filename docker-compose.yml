version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      # This DATABASE_URL uses the name of the db service and the POSTGRES_USER
      # and POSTGRES_DB defined below.
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      SALEOR_API_TOKEN: "${SALEOR_API_TOKEN}"
      SECRET_KEY: "${SECRET_KEY}"
      # This URL points to the 'redis' service name within the Docker network.
      CELERY_BROKER_URL: "redis://redis:6379/1"
      REDIS_URL: "redis://redis:6379/0"
      LINK_SALEOR_CHANNEL_ID: "${LINK_SALEOR_CHANNEL_ID}"
      LINK_SALEOR_CATEGORY_ID: "${LINK_SALEOR_CATEGORY_ID}"
      LINK_SALEOR_PRODUCT_TYPE: "${LINK_SALEOR_PRODUCT_TYPE}"

    # This command runs Alembic migrations on startup to ensure the database
    # schema is always up-to-date before the app starts.
    command: >
      sh -c "alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000"             
    depends_on:
      - db
      - redis
    networks:
      - airshop-network

  worker:
    build: .
    volumes:
      - .:/app
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_URL: "redis://redis:6379/0"
      CELERY_BROKER_URL: "redis://redis:6379/1"
      IMAGE_PROCESSING_URL: "https://image-service.dev.airshop.kz/api/v1/ImageProcessing/moderate"

    command: sh -c "celery -A app.core.celery_app.celery_app worker -l info"
    depends_on:
      - db
      - redis
    networks:
      - airshop-network

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      # These variables are read by the postgres image to set up the database
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - airshop-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - airshop-network

volumes:
  postgres_data:
  redis_data:

networks:
  airshop-network:
    driver: bridge